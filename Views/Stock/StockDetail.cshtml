@model ClothingPro.BusinessLayer.DTO.StockDTO

@{
    ViewData["Title"] = "Product Details";
}

<style>
    #mainImage {
        position: relative;
        overflow: hidden;
    }

    #commonselectedcolorName {
        font-weight: 900;
    }

    #mainImage img {
        width: 100%;
        height: 420px;
        object-fit: contain;
    }

    .thumbnail {
        /* width: 100%; */
        width: 100%;
        /* height: 100px; */
        height: 100px;
        /* object-fit: cover; */
        cursor: pointer;
        transition: opacity 0.3s;
    }

        .thumbnail:hover {
            opacity: 0.7;
        }

    .carousel-control {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        background-color: rgba(0, 0, 0, 0.5);
        color: white;
        padding: 10px;
        text-decoration: none;
        font-size: 24px;
    }

        .carousel-control.left {
            left: 10px;
        }

        .carousel-control.right {
            right: 10px;
        }

    .product-info {
        background-color: #f8f9fa;
        padding: 20px;
        border-radius: 5px;
    }

    .price {
        font-size: 24px;
        color: #007bff;
        font-weight: bold;
    }

    .thumbnail-container {
        position: relative;
        display: flex;
        align-items: center;
        overflow: hidden;
        width: 100%; /* Adjust as needed */
    }

    .thumbnail-scroll {
        display: flex;
        overflow-x: auto;
        scroll-behavior: smooth;
        max-width: 80%; /* Adjust width to fit between buttons */
        white-space: nowrap;
    }

    .thumbnail-item {
        flex: 0 0 auto; /* Ensures items don't wrap */
        padding: 5px; /* Add space between images */
    }

    .thumbnail-scroll-btn {
        background-color: #ddd;
        border: none;
        padding: 10px;
        cursor: pointer;
        font-size: 18px;
    }

        .thumbnail-scroll-btn.left {
            position: absolute;
            left: 0;
        }

        .thumbnail-scroll-btn.right {
            position: absolute;
            right: 0;
        }


    .thumbnail-scroll {
        display: flex;
        overflow-x: auto;
        scroll-behavior: smooth;
        -webkit-overflow-scrolling: touch;
        scrollbar-width: none; /* Firefox */
        -ms-overflow-style: none;
    }

        .thumbnail-scroll::-webkit-scrollbar { /* WebKit */
            width: 0;
            height: 0;
        }

    .thumbnail-item {
        flex: 0 0 auto;
        width: 100px;
        margin-right: 10px;
    }

    .thumbnail {
        width: 100%;
        height: 100px;
        /* object-fit: cover; */
        cursor: pointer;
        transition: opacity 0.3s;
    }

        .thumbnail:hover {
            opacity: 0.7;
        }

    .thumbnail-scroll-btn {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        background-color: rgba(0, 0, 0, 0.5);
        color: white;
        border: none;
        padding: 5px 10px;
        cursor: pointer;
        z-index: 1;
    }

        .thumbnail-scroll-btn.left {
            left: 0;
        }

        .thumbnail-scroll-btn.right {
            right: 0;
        }

    .nav-tabs .nav-link {
        color: #495057;
        background-color: #f8f9fa;
        border: 1px solid #dee2e6;
    }

        .nav-tabs .nav-link.active {
            color: #495057;
            background-color: #fff;
            border-color: #dee2e6 #dee2e6 #fff;
        }

    .tab-content {
        border: 1px solid #dee2e6;
        border-top: none;
        padding: 20px;
    }

    .side-nav {
        background-color: #f8f9fa;
        padding: 15px;
        border-radius: 5px;
    }

    .side-nav-header {
        font-weight: bold;
        margin-bottom: 10px;
        color: #333;
    }

    .side-nav .nav-link {
        color: #495057;
        transition: all 0.3s ease;
    }

        .side-nav .nav-link:hover {
            background-color: #e9ecef;
            color: #007bff;
        }

        .side-nav .nav-link i {
            margin-right: 10px;
        }

    /* Card styles */
    .card-img-top {
        height: 200px;
        object-fit: cover;
    }

    /* Responsive styles */
    @@media (max-width: 450px) {
        .thumbnail-container {
            margin-left: 35px;
        }
    }

    @@media (max-width: 500px) {
        .thumbnail-container {
            margin-left: 20px;
        }

        .btn-right {
            margin-right: 50px;
        }
    }

    @@media (max-width: 440px) {
        #thumbnails {
            margin-left: 30px !important;
        }
    }

    @@media (min-width: 440px) and (max-width: 450px) {
        #thumbnails {
            margin-left: 30px !important;
        }
    }

    @@media (max-width: 767.98px) {
        .side-nav {
            background-color: #f8f9fa;
            padding: 15px;
            border-radius: 5px;
            margin-bottom: 20px;
        }

        .side-nav-header {
            display: block;
            font-weight: bold;
            margin-bottom: 10px;
            color: #333;
        }

        .side-nav .nav {
            flex-direction: column;
        }

        .side-nav .nav-item {
            margin-bottom: 5px;
        }

        .side-nav .nav-link {
            display: block;
            padding: 10px 15px;
            background-color: #e9ecef;
            border-radius: 5px;
            transition: all 0.3s ease;
        }

            .side-nav .nav-link:hover {
                background-color: #007bff;
                color: #fff;
            }

            .side-nav .nav-link i {
                margin-right: 10px;
            }
    }

    .colorName {
        display: none;
    }
</style>



<div class="container mt-5">
    <div class="col-12 col-md-3 col-lg-3">
        <button class="btn btn-primary" onclick="GotoHome()">Home</button>
        <nav class="side-nav">
            <div class="title-action" id="showmenuheader">
                <a class="btn btn-primary" onclick="showMenuHeader()">
                    <i class="bi bi-window-sidebar"></i>
                </a>
            </div>
            <div class="title-action" id="hidemenuheader">
                <a class="btn btn-primary" onclick="hideMenuHeader()">
                    <i class="bi bi-x-square-fill"></i>
                </a>
            </div>
            <div class="side-nav-header" id="menuheadertitle">Menu Header</div>
            <ul class="nav flex-column" id="navbarlist">
                @if (Model.MenuHeaderLists != null)
                {
                    @foreach (var item in Model.MenuHeaderLists)
                    {
                        <li class="nav-item">
                            <a class="nav-link" onclick="getStockMenuList(@item.MenuHeaderId)" title="@item.MenuHeaderName">
                                <i class="fa-solid fa-shop"></i>
                                <span>@item.MenuHeaderName</span>
                            </a>
                        </li>
                    }
                }

            </ul>
        </nav>
    </div>
    <div class="row">
        <!-- Left column with product image -->
        <div class="col-md-6">
            <div id="mainImage">
                @if (Model.ColorImagesDTOs != null && Model.ColorImagesDTOs.Count > 0)
                {
                    var modes = Model.ColorImagesDTOs.FirstOrDefault();
                    var imgSrc = modes.ColorImagesImg;
                    <img id="stimageindividual" src="@imgSrc" class="img-fluid" alt="">
                }
                else
                {

                    @if (!string.IsNullOrEmpty(Model.StImage))
                    {
                        var images = Model.StImage.Split(';');
                        <img id="stimageindividual" src="@images[0]" class="img-fluid" alt="@Model.StName">
                    }
                }

                <a href="#" class="carousel-control left">&lsaquo;</a>
                <a href="#" class="carousel-control right">&rsaquo;</a>
                <input type="hidden" asp-for="StId" />
                <input type="hidden" id="StFlagValId" value="@Model.StFlagVal" />
            </div>
            <div>
                @if (Model.ColorImagesDTOs.Count > 0 && Model.StFlagVal == 1)
                {
                    var modes = Model.ColorImagesDTOs.FirstOrDefault();
                    <span id="commonselectedcolorName" class="" name=$"{@modes.ColorName}">Color Family: @modes.ColorName</span>
                }
            </div>

            @if (Model.ColorImagesDTOs.Count > 0 && Model.StFlagVal == 1)
            {


                <div class="thumbnail-container mt-3">
                    <button class="thumbnail-scroll-btn left" onclick="scrollThumbnails('left')">&lt;</button>
                    <div class="thumbnail-scroll" id="thumbnails">

                        @foreach (var path in Model.ColorImagesDTOs)
                        {

                            <img id="@path.ColorImagesId" src="@path.ColorImagesImg" class="img-fluid thumbnail" alt="@path.ColorImagesName" name="@path.ColorName" onmouseover="imgSrc(@path.ColorImagesId)" onclick="imgSrc(@path.ColorImagesId)" />
                        }
                    </div>
                    <button class="thumbnail-scroll-btn right btn-right" onclick="scrollThumbnails('right')">&gt;</button>
                </div>

            }
            else if (Model.StFlagVal == 0)
            {

                <div class="thumbnail-container mt-3">
                    <button class="thumbnail-scroll-btn left">&lt;</button>
                    <div class="thumbnail-scroll" id="thumbnails">
                        @if (!string.IsNullOrEmpty(Model.StImage))
                        {
                            var images = Model.StImage.Split(';');
                            var i = 0;

                            foreach (var image in images)
                            {
                                i++;
                                <div class="col-4">
                                    <img id="stimagelist-@i" src="@image" class="img-fluid thumbnail" alt="@Model.StName" onclick="ChangeImgSrc(@i)">
                                </div>
                            }
                        }
                    </div>
                    <button class="thumbnail-scroll-btn right">&gt;</button>
                </div>
            }

            else
            {

                <div class="thumbnail-container mt-3">
                    <button class="thumbnail-scroll-btn left">&lt;</button>
                    <div class="thumbnail-scroll" id="thumbnails">
                        @if (!string.IsNullOrEmpty(Model.StImage))
                        {
                            var images = Model.StImage.Split(';');
                            var i = 0;

                            foreach (var image in images)
                            {
                                i++;
                                <div class="col-4">
                                    <img id="stimagelist-@i" src="@image" class="img-fluid thumbnail" alt="@Model.StName">
                                </div>
                            }
                        }
                    </div>
                    <button class="thumbnail-scroll-btn right">&gt;</button>
                </div>
            }


        </div>

        <!-- Right column with product details -->
        <div class="col-md-6">
            <div class="product-info">
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a onclick="GotoHome()">HOME</a></li>
                        <li class="breadcrumb-item"><a onclick="getStockMenuList(@Model.StMenuHeaderId)">@Model.StName</a></li>
                        <li class="breadcrumb-item active" aria-current="page">@Model.StName</li>
                    </ol>
                </nav>
                <h1 id="stockname">@Model.StName</h1>
                <p id="stockcode" class="price">@Model.StCode</p>
                <p id="stockdes">@Model.StDes</p>
                <p>
                    @if (Model.ColorImagesDTOs != null && Model.ColorImagesDTOs.Count > 0 && Model.StFlagVal == 1)
                    {
                        var modes = Model.ColorImagesDTOs.FirstOrDefault();
                        <div class="d-flex align-items-center">
                            <span>Available colors:</span>
                            <div class="d-flex" style="margin-left:10px;">
                                @{
                                    foreach (var color in Model.ColorImagesDTOs)
                                    {
                                        <div style="background-color:@color.ColorNamePicker; height:20px; width:20px; margin-right:5px;" onclick="imgSrc(@color.ColorImagesId)"></div>
                                    }
                                }
                            </div>
                        </div>
                    }
                    else
                    {
                        @if (!string.IsNullOrEmpty(Model.StColour) && Model.StFlagVal == 0)
                        {
                            <div class="d-flex align-items-center">
                                <span>Available colors:</span>
                                <div class="d-flex" style="margin-left:10px;">
                                    @{
                                        var colors = Model.StColour.Split(';');
                                        var i = 0;
                                        foreach (var color in colors)
                                        {
                                            i++;
                                            <div class="normalcolor-@i" style="background-color:@color; height:20px; width:20px; margin-right:5px;" onclick="ChangeImgSrc('@i')"></div>
                                        }
                                    }
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="d-flex align-items-center">
                                <span>No Available colors:</span>
                            </div>
                        }
                    }

                </p>
                <p>
                    @if (!string.IsNullOrEmpty(Model.StSize))
                    {
                        <span>Available sizes: @Model.StSize</span>
                    }
                </p>
                @*  <p>We take a minimum of 10 pieces for order.</p> *@

                @*   <p class="mt-3 mb-1"><strong>Categories:</strong> @(Model.StIsShirt == 1 ? "Shirts" : "") @(Model.StIsPant == 1 ? "Pants" : "") @(Model.StIsOther == 1 ? "Other" : "")</p>
                <p><strong>Tags:</strong> @Model.StColour, @Model.StSize</p>
                <div class="social-buttons mt-3">
                <!-- Add your social sharing buttons here -->
                </div> *@
            </div>
        </div>
    </div>

    <!-- Tabs Section -->
    <div class="row mt-5" style="display:none">
        <div class="col-12">
            <ul class="nav nav-tabs" id="productTabs" role="tablist">
                <li class="nav-item">
                    <a class="nav-link active" id="description-tab" data-toggle="tab" href="#description" role="tab">Description</a>
                </li>
                @* <li class="nav-item">
                <a class="nav-link" id="reviews-tab" data-toggle="tab" href="#reviews" role="tab">Reviews (0)</a>
                </li> *@
            </ul>
            <div class="tab-content" id="productTabsContent">
                <div class="tab-pane fade show active" id="description" role="tabpanel">
                    <h3>Product Features:</h3>
                    <ul>
                        <li>@Model.StDes</li>
                        @if (!string.IsNullOrEmpty(Model.StColour))
                        {
                            <div class="d-flex align-items-center">
                                <span>Available colors:</span>
                                <div class="d-flex" style="margin-left:10px;">
                                    @{
                                        var colors = Model.StColour.Split(';');
                                        foreach (var color in colors)
                                        {
                                            <div style="background-color:@color; height:20px; width:20px; margin-right:5px;"></div>
                                        }
                                    }
                                </div>
                            </div>
                        }


                        @if (!string.IsNullOrEmpty(Model.StSize))
                        {
                            <li>Available sizes: @Model.StSize</li>
                        }
                        @if (!string.IsNullOrEmpty(Model.StHSCode))
                        {
                            <li>HS Code: @Model.StHSCode</li>
                        }
                    </ul>
                    @*  <h3>Material/care instructions:</h3>
                    <ul>
                    <li>Please refer to the product label for care instructions.</li>
                    </ul> *@
                </div>
                @*  <div class="tab-pane fade" id="reviews" role="tabpanel">
                <p>There are no reviews yet.</p>
                </div> *@
            </div>
        </div>
    </div>

    <!-- Related Products Section -->

</div>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="~/js/stock.js"></script>
<script>
    $(document).ready(function () {
        $("#menuheadertitle").hide();
        $("#navbarlist").hide();
        $("#hidemenuheader").hide();

    });
    document.addEventListener('DOMContentLoaded', function () {
        const mainImage = document.querySelector('#mainImage img');
        const thumbnails = document.querySelectorAll('.thumbnail');
        const prevButton = document.querySelector('.carousel-control.left');
        const nextButton = document.querySelector('.carousel-control.right');
        let currentIndex = 0;

        function updateMainImage(index) {
            mainImage.src = thumbnails[index].src;
            mainImage.alt = thumbnails[index].alt;
            currentIndex = index;
        }

        thumbnails.forEach((thumbnail, index) => {
            thumbnail.addEventListener('click', function () {
                updateMainImage(index);
            });
        });

        prevButton.addEventListener('click', function (e) {
            e.preventDefault();
            currentIndex = (currentIndex - 1 + thumbnails.length) % thumbnails.length;
            updateMainImage(currentIndex);
        });

        nextButton.addEventListener('click', function (e) {
            e.preventDefault();
            currentIndex = (currentIndex + 1) % thumbnails.length;
            updateMainImage(currentIndex);
        });

        //tabs functionality
        const tabLinks = document.querySelectorAll('.nav-link');
        const tabContents = document.querySelectorAll('.tab-pane');

        tabLinks.forEach(link => {
            link.addEventListener('click', (e) => {
                e.preventDefault();
                const tabId = link.getAttribute('href');

                tabLinks.forEach(l => l.classList.remove('active'));
                tabContents.forEach(c => c.classList.remove('show', 'active'));

                link.classList.add('active');
                document.querySelector(tabId).classList.add('show', 'active');
            });
        });


    });

    function scrollThumbnails(direction) {
        const thumbnails = document.getElementById("thumbnails");
        const scrollAmount = 100; // Adjust as needed

        if (direction === 'left') {
            thumbnails.scrollLeft -= scrollAmount;
        } else if (direction === 'right') {
            thumbnails.scrollLeft += scrollAmount;
        }
    }



</script>